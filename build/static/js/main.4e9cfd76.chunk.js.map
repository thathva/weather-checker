{"version":3,"sources":["actions/index.js","actions/key.js","components/SearchBar.js","components/Chart.js","components/WeatherList.js","components/App.js","reducers/index.js","reducers/weatherReducer.js","index.js"],"names":["URL","fetchWeather","city","url","type","payload","axios","get","SearchBar","props","state","term","darkMode","onInputChange","bind","onFormChange","event","this","setState","target","value","preventDefault","className","onSubmit","onChange","React","Component","connect","dispatch","bindActionCreators","height","width","data","color","_","round","sum","length","unit","WeatherList","cityData","undefined","name","id","temps","list","map","weather","main","temp","pressure","key","Chart","units","renderWeather","App","rootReducer","combineReducers","action","store","applyMiddleware","ReduxPromise","createStore","ReactDOM","render","reducers","document","querySelector"],"mappings":"qQAIMA,EAAG,gECJU,oCDgBJC,MAVf,SAAsBC,GAClB,IAAMC,EAAG,UAAMH,EAAN,cAAeE,GAGxB,MAAO,CACHE,KATqB,gBAUrBC,QAJYC,IAAMC,IAAIJ,KEHxBK,E,kDACF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CAACC,KAAM,GAAGC,UAAU,GACjC,EAAKC,cAAgB,EAAKA,cAAcC,KAAnB,gBACrB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAJL,E,0DAOLE,GACVC,KAAKC,SAAS,CAACP,KAAKK,EAAMG,OAAOC,U,mCAGxBJ,GACTA,EAAMK,iBACNJ,KAAKR,MAAMR,aAAagB,KAAKP,MAAMC,Q,+BAInC,OACI,yBAAKW,UAAU,oCACX,0BAAMA,UAAU,gBAAgBC,SAAUN,KAAKF,cAC3C,2BAAOO,UAAU,SAASF,MAAOH,KAAKP,MAAMC,KAAMa,SAAUP,KAAKJ,gBAEjE,uBAAGS,UAAU,sB,GAvBTG,IAAMC,WAiCfC,kBAAQ,MAJvB,SAA4BC,GACxB,OAAOC,YAAmB,CAAC5B,gBAAc2B,KAG9BD,CAAiCnB,G,yBC9BjC,eAACC,GACZ,OACI,6BACI,kBAAC,aAAD,CACIqB,OAAQ,IACRC,MAAO,IACPC,KAAMvB,EAAMuB,MACZ,kBAAC,iBAAD,CAAgBC,MAAOxB,EAAMwB,SAE7B,0CAbCD,EAcqBvB,EAAMuB,KAbjCE,IAAEC,MAAMD,IAAEE,IAAIJ,GAAMA,EAAKK,SAae5B,EAAM6B,OAdzD,IAAiBN,GCAXO,E,4KAEYC,GACV,QAAgBC,IAAbD,EAAH,CAGA,IAAME,EAAOF,EAAStC,KAAKwC,KACrBC,EAAKH,EAAStC,KAAKyC,GACnBC,EAAQJ,EAASK,KAAKC,KAAI,SAAAC,GAAO,OAAKA,EAAQC,KAAKC,KAAM,UACzDC,EAAWV,EAASK,KAAKC,KAAI,SAAAC,GAAO,OAAIA,EAAQC,KAAKE,YAC3D,OACI,wBAAIC,IAAKR,GACL,4BAAKD,GACL,4BAAI,kBAACU,EAAD,CAAOpB,KAAMY,EAAOX,MAAM,SAASoB,MAAM,OAC7C,4BAAI,kBAACD,EAAD,CAAOpB,KAAMkB,EAAUjB,MAAM,OAAOoB,MAAM,a,+BAMtD,OACI,2BAAO/B,UAAU,8BACb,+BACI,4BACI,oCACA,+CACA,gDAGR,+BACKL,KAAKR,MAAMsC,QAAQD,IAAI7B,KAAKqC,qB,GA9BvB5B,aAyCXC,mBAJf,YACI,MAAO,CAACoB,QADwB,EAAVA,WAIXpB,CAAyBY,GC9BzBgB,E,uKATP,OACI,6BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GALE9B,IAAMC,W,QCGT8B,EAJKC,YAAgB,CAChCV,QCFW,WAA4B,IAAnBrC,EAAkB,uDAAX,GAAGgD,EAAQ,uCACtC,OAAOA,EAAOtD,MACV,IPFqB,gBOGjB,MAAM,CAAEsD,EAAOrD,QAAQ2B,MAAvB,mBAA+BtB,IACnC,QACI,OAAOA,MCCbiD,EAAQC,YAAgBC,IAAhBD,CAA8BE,KAE5CC,IAASC,OAAO,kBAAC,IAAD,CAAUL,MAAOA,EAAMM,IAAW,kBAAC,EAAD,OAAkBC,SAASC,cAAc,Y","file":"static/js/main.4e9cfd76.chunk.js","sourcesContent":["import axios from 'axios'\r\nimport {KEY} from './key.js'\r\nexport const FETCH_WEATHER = \"FETCH_WEATHER\"\r\n\r\nconst URL = `http://api.openweathermap.org/data/2.5/forecast?appid=${KEY}`;\r\n\r\nfunction fetchWeather(city) {\r\n    const url = `${URL}&q=${city}`;\r\n    const request = axios.get(url)\r\n\r\n    return {\r\n        type: FETCH_WEATHER,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport default fetchWeather","export const KEY = \"ef6f94f62044ed3dac36521b9054bf05\"","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport  fetchWeather  from '../actions/index'\r\n\r\nclass SearchBar extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {term: '',darkMode: false}\r\n        this.onInputChange = this.onInputChange.bind(this);\r\n        this.onFormChange = this.onFormChange.bind(this);\r\n    }\r\n\r\n    onInputChange(event) {\r\n        this.setState({term:event.target.value})\r\n    }\r\n\r\n    onFormChange(event) {\r\n        event.preventDefault();\r\n        this.props.fetchWeather(this.state.term)\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"ui right aligned category search\">\r\n                <form className=\"ui icon input\" onSubmit={this.onFormChange}>\r\n                    <input className=\"prompt\" value={this.state.term} onChange={this.onInputChange}>\r\n                    </input>\r\n                    <i className=\"search icon\"></i>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n    return bindActionCreators({fetchWeather},dispatch)\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps)(SearchBar)","import React from 'react';\r\nimport {Sparklines, SparklinesLine} from 'react-sparklines';\r\nimport _ from 'lodash';\r\n\r\nfunction average(data){\r\n    return _.round(_.sum(data)/data.length);\r\n}\r\n\r\nexport default (props) => {\r\n    return (\r\n        <div>\r\n            <Sparklines \r\n                height={120}\r\n                width={180}\r\n                data={props.data}>\r\n                <SparklinesLine color={props.color}/>\r\n                </Sparklines>\r\n                <div>\r\n                    Average: {average(props.data)}{props.unit}\r\n                </div>\r\n        </div>\r\n    )\r\n}","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Chart from './Chart'\r\n\r\nclass WeatherList extends Component {\r\n\r\n    renderWeather(cityData) {\r\n        if(cityData === undefined) {\r\n           return\r\n        }\r\n        const name = cityData.city.name;\r\n        const id = cityData.city.id;\r\n        const temps = cityData.list.map(weather => (weather.main.temp)-273.15)\r\n        const pressure = cityData.list.map(weather => weather.main.pressure)\r\n        return (\r\n            <tr key={id}>\r\n                <td>{name}</td>\r\n                <td><Chart data={temps} color=\"orange\" units=\"C\"/></td>\r\n                <td><Chart data={pressure} color=\"blue\" units=\"hPa\"/></td>\r\n            </tr>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <table className=\"ui selectable celled table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>City</th>\r\n                        <th>Temperature (C)</th>\r\n                        <th>Pressure (HPA)</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.props.weather.map(this.renderWeather)}\r\n                </tbody>\r\n                </table>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({weather}) {\r\n    return {weather}\r\n}\r\n\r\nexport default connect(mapStateToProps)(WeatherList)","import React from 'react';\r\nimport SearchBar from './SearchBar'\r\nimport WeatherList from './WeatherList'\r\n\r\nclass App extends React.Component {\r\n    render() {\r\n        return(\r\n            <div>\r\n                <SearchBar/>\r\n                <WeatherList/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import {combineReducers} from 'redux'\r\nimport WeatherReducer from './weatherReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    weather: WeatherReducer\r\n})\r\n\r\nexport default rootReducer","import {FETCH_WEATHER} from '../actions/index';\r\n\r\nexport default function(state= [],action) {\r\n    switch(action.type) {\r\n        case FETCH_WEATHER:\r\n            return [action.payload.data,...state]\r\n        default:\r\n            return state\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport ReduxPromise from 'redux-promise';\r\nimport App from './components/App'\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport reducers from './reducers'\r\n\r\nconst store = applyMiddleware(ReduxPromise)(createStore);\r\n\r\nReactDOM.render(<Provider store={store(reducers)}><App/></Provider>,document.querySelector(\"#root\"))"],"sourceRoot":""}